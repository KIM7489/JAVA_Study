import java.util.Collection;
import java.util.Comparator;
import java.util.Iterator;
import java.util.Scanner;

import LasInfor.LasDataSet;
import LasInfor.LasLoginData;
import LasInfor.LasVO;
import LasInfor.LoginVO;

public class LasManager {
	
	Scanner scan = new Scanner(System.in);
	
	public LasManager() {
		
	}
// =========================================== Strat 메소드 =================================================================

public void start() { 
	Login.userIdlist(); // 회원목록 초기값
	LasLoginData.loginSet(); //회원 아이디 비밀번호 초기값
	LasDataSet.basicLasSet();//도서 초기값
	int num = loop1(); //로그인 회원가입 메소드  3 = 관리자 1 =  사용자
	lasPage1(num);
	}

//=========================================== Strat 메소드 ==================================================================
	

//회원 가입 기능
	
	public void memberIn() {// admin key는 입력불가능하게 설정
	System.out.println();
	System.out.println("==============Las 회원가입===============");
	System.out.println();
	String id = inData("아이디");
	String pwd	= inData("비밀번호");
	String email =	inData("이메일");
	String add  = inData("주소");
	String day = inData("등록일");
	System.out.printf("회원가입이 완료\n[아이디:%s]\n",id);
	LasLoginData.hs1.put(id,new LoginVO(id,pwd,email,add,day));
	Login.map.put(id, pwd);
	}	

//회원 정보 전부 출력
	
	public void memberAll() {
		LoginVO.memberPrint();
		Collection<LoginVO> list = LasLoginData.hs1.values();
		Iterator<LoginVO> ii = list.iterator();
		while(ii.hasNext()) {
			LoginVO lo = ii.next();
			lo.loginPrint();
		}
		
	}

//로그인 기능 구현

	public int loginSystem() {
		//로그인 시도 횟수 제한 기능
		int result = 0;
		for(int i = 1; i <= 6; i++) {
		if(i==6) {
			System.out.println("로그인 시도 횟수를 초과하셨습니다 시스템을 종료합니다.");
			System.exit(0);
		}
		System.out.println();
		System.out.println("==============Las Login==============");
		String userid = inData("아이디");
		String userpwd = inData("비밀번호");
		  
		Login log = new Login();
		result = log.loginCheck(userid, userpwd);

		if(result==4) {
			System.out.println("존재하지 않는 아이디입니다. 다시 입력해주세요.");
			loginSystem();
			break;
		}
		if(result==3) {
			break;
		}
		if(result==2) {
			System.out.printf("비밀번호를 잘못 입력하셨습니다. 5번 실패시 프로그램이 종료됩니다. 실패 횟수:%d\n",i);
		}if(result==1) {
			break;
		}
		}
	if(result == 3) {
		return 3; // 관리자
	}else if(result == 1) {
		return 1; /// 사용자
	}else {
		return 0;
	}
	}
// 로그인 회원가입 반복문
	public int loop1() {
		int i = 0;
	
	while(true) {
		System.out.println("=============도서관리 시스템==============");
		try {
		int st = intData("        1.로그인 2.회원가입 3.종료\n=====================================");
		
		  if(st==1) {
							i = loginSystem(); // 3 관리자 1 사용자
							break;
		} else if(st == 2) {
							memberIn(); // 회원가입
		} else if(st==3){
							System.exit(0); // 종료
		} else {
			System.out.println("1 or 2 or 3중 하나를 입력하셔야 합니다.");
			loop1(); // 반복
		}
		}catch(NumberFormatException e){
			System.out.println(e + "숫자만 입력 하셔야 됩니다.");
		}
	}
	
		return i; //1 == master 2== 
	}
//// 관리자 페이지 or 사용자 페이지 만들기 
	public void lasPage1(int num) {
	
	while(true) {
 if(num==3) {
			System.out.println();
			System.out.println("\t\t\t\t관리자 페이지");
			System.out.println();
			System.out.println("==========================================================================");
			memberAll();
			System.out.println();
			System.out.println("==========================================================================");
			System.out.println();
			int result2 = intData("1.회원정보 수정 2.도서관리 페이지");
   if(result2 == 1) {
	   		System.out.println();
			System.out.println();
			System.out.println("\t\t\t회원정보 수정 페이지");
			System.out.println();	
			memberAll();
			System.out.println();
			System.out.println("==============================================================================");
			System.out.println();
	 int code = intData("1.비밀번호  2.이메일 3.주소 4.관리자 페이지 이동");
		 if(code == 1) {
					pwdChange();
		 } else if(code ==2) {
					emailChange();
		 } else if(code == 3) {
					addChange();
		 } else if(code == 4) {
					
		 } else {
					System.out.println("1 or 2 or 3 or 4 를 입력해주세요.");
				}
			} 
  if(result2 == 2) {
	  	while(true) {
	  		try {
					System.out.println();
					System.out.println("\t\t\t\t도서관리 페이지");
					System.out.println();	
	  				bookPrint();
	  				System.out.println();
					System.out.println("===============================================================================================");
					System.out.println();
	  				int code = intData("1.도서명  2.가격  3.저자  4.출판사  5.발행일  6.재고  7.모두변경  8.도서추가 9.관리자 페이지");
	
	 if(code == 1) {
		 			nameChange();
		 			
	 				}
	 
	 if(code == 2) {
		 			
		 			salChange();
	 				
	 	           }
	
	 if(code == 3) {
		 
		 			waiterChange();
		 
	 			   }
	
	 if(code == 4) {
		 
		 			publisherChange();
		 
	 				}	  				
	 
	 if(code == 5) {
		 
		 			publishChange();
		 
	   				}	  	
	 
	 if(code == 6) {
		 			
		 			booksChange();
		 
	   				}
	
	 if(code == 7) {
		 			
		 			bookAllChange();
		 
	   				}	
	
	 if(code == 8) {
		 
		 			bookAdd();
		 			
	   				}
	 
	 if(code == 9) {
		 	break;
		 
					}
	  					}catch(NumberFormatException e) {
	  													System.out.println("숫자만 입력하셔야 합니다.");
	  													}
	  	}
	  				
  
  	}
           
  else {
				System.out.println("1 또는 2를 입력해 주세요");
			}
			
		} 
 
if(num==1) {
			
		} else {
			System.out.println("사스템 에러 발생 다시 작성해라");
		}
		}
	}
	
	//도서 전체 출력 메소드
	public void bookPrint() {
		new LasVO().titlePrint();
		Collection<LasVO> list = LasDataSet.hs.values();
		Iterator<LasVO> ii =list.iterator();
		
		while(ii.hasNext()) {
			LasVO la = ii.next();
			la.lasPrint();
		}
		
		
	}
// -----------------------------------------------변경 메소드 정리 추가----------------------------------------------------------------------		
    //가격 정렬 메소드. 
	public void sortLas() {
		Collection.sort()
		
	}
	
	
	
	//비밀번호 변경 메소드
	public void pwdChange() {
		
		System.out.println("비밀번호를 변경할 아이디를 입력해 주세요.");
		String id = inData("아이디:"); //강제 예외
		System.out.println("변경할 비밀번호를 입력해주세요");
		String pwd = inData("비밀번호:");
		Login.map.replace(id, pwd);
		LoginVO vo = LasLoginData.hs1.get(id);
		vo.setUserpwed(pwd);
	}
	
	//이메일 변경 메소드
	public void emailChange() {
		System.out.println("이메일을 변경할 아이디를 입력해 주세요.");
		String id = inData("아이디:"); // 강제 예외
		System.out.println("변경할 이메일을 입력해주세요");
		String email = inData("이메일:");
		LoginVO vo = LasLoginData.hs1.get(id);
		vo.setUserEmail(email);
	}
	
	//주소 변경 메소드
	public void addChange() {
		System.out.println("주소를 변경할 아이디를 입력해 주세요.");
		String id = inData("아이디:"); // 강제 예외
		System.out.println("변경할 주소를 입력해주세요");
		String add = inData("주소:");
		LoginVO vo = LasLoginData.hs1.get(id);
		vo.setUseradd(add);
	}
	//도서명 변경 메소드
	public void nameChange() {
		System.out.println("변경할 도서번호를 입력해 주세요.");
		int id = intData("도서번호:"); // 강제 예외
		System.out.println("변경할 도서명을 입력해 주세요.");
		String add = inData("도서명:");
		LasVO la = LasDataSet.hs.get(id);
		la.setBookName(add);
	}
	//도서가격 변경 메소드
	public void salChange() {
		System.out.println("변경할 도서번호를 입력해 주세요.");
		int id = intData("도서번호:"); // 강제 예외
		System.out.println("변경할 도서 가격을 입력해 주세요.");
		int add = intData("가격:");
		LasVO la = LasDataSet.hs.get(id);
		la.setBookSal(add);
	}
	//도서 저자 변경 메소드
	public void waiterChange() {
		System.out.println("변경할 도서번호를 입력해 주세요.");
		int id = intData("도서번호:"); // 강제 예외
		System.out.println("변경할 저자명을 입력해 주세요.");
		String add = inData("저자:");
		LasVO la = LasDataSet.hs.get(id);
		la.setWaiter(add);
	}
	//도서 출판사 변경 메소드
	public void publisherChange() {
		System.out.println("변경할 도서번호를 입력해 주세요.");
		int id = intData("도서번호:"); // 강제 예외
		System.out.println("변경할 출판사명을 입력해 주세요.");
		String add = inData("출판사:");
		LasVO la = LasDataSet.hs.get(id);
		la.setPublisher(add);
	}
	//도서 발행일 변경 메소드
	public void publishChange() {
		System.out.println("변경할 도서번호를 입력해 주세요.");
		int id = intData("도서번호:"); // 강제 예외
		System.out.println("변경할 출판사명을 입력해 주세요.");
		String add = inData("출판사:");
		LasVO la = LasDataSet.hs.get(id);
		la.setPublish(add);
	}
	//
	public void booksChange() {
		System.out.println("변경할 도서번호를 입력해 주세요.");
		int id = intData("도서번호:"); // 강제 예외
		System.out.println("변경할 출판사명을 입력해 주세요.");
		String add = inData("출판사:");
		LasVO la = LasDataSet.hs.get(id);
		la.setBooks(id);
	}
	public void bookAllChange() {
		System.out.println("변경할 도서번호를 입력해 주세요.");
		int number = intData("도서번호:"); 
		System.out.println("변경할 도서명을 입력해 주세요.");
		String name = inData("도서명:");
		System.out.println("변경할 가격을 입력해 주세요.");
		int sal = intData("가격:");
		System.out.println("변경할 저자명 입력해 주세요.");
		String waiter = inData("저자:");
		System.out.println("변경할 출판사명을 입력해 주세요.");
		String publisher = inData("출판사:");
		System.out.println("변경할 발행일을 입력해 주세요.");
		String publish = inData("발행일:");
		System.out.println("수정할 재고를 입력해 주세요.");
		int books = intData("재고:");
		
		LasVO la = LasDataSet.hs.get(number);
		la.booksAllchange(name,sal, waiter, publisher,publish,books);
		
	}
	public void bookAdd() {
		System.out.println("도서번호를 입력해 주세요.");
		int number = intData("도서번호:"); 
		System.out.println("도서명을 입력해 주세요.");
		String name = inData("도서명:");
		System.out.println("가격을 입력해 주세요.");
		int sal = intData("가격:");
		System.out.println("저자명 입력해 주세요.");
		String waiter = inData("저자:");
		System.out.println("출판사명을 입력해 주세요.");
		String publisher = inData("출판사:");
		System.out.println("발행일을 입력해 주세요.");
		String publish = inData("발행일:");
		System.out.println("재고를 입력해 주세요.");
		int books = intData("재고:");

		LasDataSet.hs.put(number,new LasVO(number,name,sal, waiter, publisher,publish,books));
	}
// -----------------------------------------------변경 메소드 ----------------------------------------------------------------------	

// -----------------------------------------------입력 메소드 정리--------------------------------------------------------		
	//콘솔 인트 입력 메소드
	public int intData(String msg) {
		System.out.print(msg);
		return Integer.parseInt(scan.nextLine());
	}

	//콘솔 문자열 입력 메소드
	public String inData(String msg) {
		System.out.println(msg+"");
		return scan.nextLine();
	}
//-----------------------------------------------입력 메소드--------------------------------------------------------------------	






//----------------------------------------------내부 클래스----------------------------------------------------------------------

 class RsalAD implements Comparator<LasVO>{
	public int compare(LasVO vo1, LasVO vo2) {
		return (vo1.getBookSal() < vo1.getBookSal())? -1 : (vo1.getBookSal() > vo1.getBookSal())? 1 : 0;
		
	}
}

}
